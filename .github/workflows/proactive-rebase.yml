name: Proactive Rebase
on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  rebase-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Check PRs that need rebasing
        uses: actions/github-script@v8
        with:
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            for (const pr of pulls) {
              // Check if PR is behind base branch
              const { data: comparison } = await github.rest.repos.compareCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base: pr.head.sha,
                head: pr.base.ref
              });
              
              if (comparison.behind_by > 0) {
                // Create issue for Copilot to rebase
                const issue = await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: `[Copilot] Rebase PR #${pr.number} with ${pr.base.ref}`,
                  body: `@copilot Please rebase PR #${pr.number} with the latest changes from ${pr.base.ref}
                  
                  ### PR Details
                  - Title: ${pr.title}
                  - Behind by: ${comparison.behind_by} commits
                  - Author: @${pr.user.login}
                  
                  ### Instructions
                  1. Fetch the latest changes from ${pr.base.ref}
                  2. Rebase ${pr.head.ref} onto ${pr.base.ref}
                  3. Resolve any conflicts if they arise
                  4. Force push the rebased branch
                  
                  This will help prevent merge conflicts before they happen!`,
                  labels: ['copilot', 'rebase', 'automated'],
                  assignees: ['copilot']
                });
                
                // Comment on the PR
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `ðŸ”„ Your PR is ${comparison.behind_by} commits behind ${pr.base.ref}. I've created issue #${issue.data.number} for Copilot to rebase it automatically.`
                });
              }
            }